name: Receive Results

permissions:
  contents: write
  actions: write
  checks: write

on:
  workflow_dispatch:
    inputs:
      hw02_q1_results:
        description: "Results of question 1"
        required: true
      hw02_q2_results:
        description: "Results of question 2"
        required: true

jobs:
  process-result:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout Student Repository
      #   uses: actions/checkout@v4

      # - name: Ensure Clean Grading Results File
      #   run: |
      #     RESULTS_FILE="/tmp/grading_results.txt"

      #     # Ensure the file exists but is empty
      #     echo "" > "$RESULTS_FILE"

      # - name: Store Results in File
      #   run: |
      #     echo "HW02_Q1_RESULTS:${{ github.event.inputs.hw02_q1_results }}" >> grading_results.txt
      #     echo "HW02_Q2_RESULTS:${{ github.event.inputs.hw02_q2_results }}" >> grading_results.txt

      # - name: Debug Received Results
      #   run: |
      #     cat /tmp/grading_results.txt

      # - name: Commit and Push Results
      #   run: |
      #     git config --global user.email "github-actions@github.com"
      #     git config --global user.name "GitHub Actions"

      #     # Check if there are any changes
      #     if [[ -n $(git status --porcelain grading_results.txt) ]]; then
      #       git add grading_results.txt
      #       git commit -m "Update grading results"
      #       git push
      #     else
      #       echo "No changes to commit."
      #     fi

      - name: Save Grading Results
        run: |
          # echo "Score: 2/2" > /tmp/grading_results.txt
          # echo "HW02_Q1_RESULTS:${{ github.event.inputs.hw02_q1_results }}" >> /tmp/grading_results.txt
          # echo "HW02_Q2_RESULTS:${{ github.event.inputs.hw02_q2_results }}" >> /tmp/grading_results.txt
          echo "HW02_Q1_RESULTS:${{ github.event.inputs.hw02_q1_results }}" > grading_results.txt
          echo "HW02_Q2_RESULTS:${{ github.event.inputs.hw02_q2_results }}" >> grading_results.txt
      
      # - name: Cache Grading Results
      #   uses: actions/cache@v4
      #   with:
      #     path: /tmp/grading_results.txt
      #     key: grading-results-${{ github.run_id }}

      # - name: Upload Grading Results as Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: grading-results
      #     path: grading_results.txt
      #     retention-days: 1  # Keep the artifact for 1 day

      - name: Upload Grading Results as Artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: grading-results
          path: grading_results.txt
          retention-days: 1

      - name: Get Artifact Info
        run: |
          echo "ARTIFACT_NAME=grading-results" >> $GITHUB_ENV

      - name: Get result of question 1
        id: Hw02_Q1
        run: |
          HW02_Q1_RESULTS="${{ github.event.inputs.hw02_q1_results }}"
          echo "HW02_Q1_RESULTS=${HW02_Q1_RESULTS:-0}" >> $GITHUB_ENV
      
      - name: Get result of question 2
        id: Hw02_Q2
        run: |
          HW02_Q2_RESULTS="${{ github.event.inputs.hw02_q2_results }}"
          echo "HW02_Q2_RESULTS=${HW02_Q2_RESULTS:-0}" >> $GITHUB_ENV

      - name: Debug Receive Results
        run: |
          echo "Receive Q1 Result: $HW02_Q1_RESULTS"
          echo "Receive Q2 Result: $HW02_Q2_RESULTS"

      # Aggregate autograding results
      - name: Report autograding results
        id: grading_report
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          HW02_Q1_RESULTS: "${{ env.HW02_Q1_RESULTS }}"
          HW02_Q2_RESULTS: "${{ env.HW02_Q2_RESULTS }}"
        with:
          runners: Hw02_Q1,Hw02_Q2

